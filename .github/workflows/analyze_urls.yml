name: Analyze URLs
on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  analyze:
    permissions:
      contents: read
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get PR diff
        id: pr
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const pr = await github.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });
            console.log(pr.data.base.sha);
            console.log(pr.data.head.sha);
            return { base_sha: pr.data.base.sha, head_sha: pr.data.head.sha };

      - name: Debug steps context
        id: debug
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            console.log(JSON.stringify(steps, null, 2));

      - name: Extract and analyze URLs
        id: analyze
        run: |
          echo "NODE_VERSION=14" >> $GITHUB_ENV
          echo "SCRIPT_PATH=./extractUrls.js" >> $GITHUB_ENV
        shell: bash
      
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
      
      - name: Install dependencies
        run: npm install
      
      - name: Run script
        run: node ${{ env.SCRIPT_PATH }} ${{ steps.pr.outputs.base_sha }} ${{ steps.pr.outputs.head_sha }}

      - name: Comment PR
        id: comment
        run: |
          OUTPUT=$(echo "${{ steps.analyze.outputs.result }}")
          if [ -z "$OUTPUT" ]; then
            OUTPUT="No URLs found to analyze."
          fi
          echo "::set-output name=result::$OUTPUT"
        shell: bash

      - name: Post comment
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const output = "${{ steps.comment.outputs.result }}";
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            });